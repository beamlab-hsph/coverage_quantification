import numpy as np
import csv
import h5py
import os 
import argparse

# This calculation of credible sets relies on the classification predictions 
# generated by Ovadia et al. You can obtain the correct files and place them 
# in /data by running the following lines of code in a colab notebook

# !gcloud config set project uq-benchmark-2019
# !gsutil cp gs://uq-benchmark-2019/mnist_model_predictions.hdf5 "mnist_model_predictions.hdf5"
# !gsutil cp gs://uq-benchmark-2019/cifar_model_predictions.hdf5 "cifar_model_predictions.hdf5"

RAW_DIR = "./data/raw/"
INTERIM_DIR = "./data/interim"


def get_credible_set(arr, epsilon):
  ''' Returns the 1-epsilon credible set for input array '''

  descending_probs_index = arr.argsort()[::-1]
  credible_indices = np.cumsum(arr[descending_probs_index]) >= (1-epsilon)
  credible_set = descending_probs_index[:(np.argwhere(credible_indices)[0][0]+1)]

  credible_indices_arr = np.zeros_like(arr)
  credible_indices_arr[credible_set] = 1

  return credible_indices_arr

def create_credible_set_h5py(dataset):
	if os.path.exists(os.path.join(INTERIM_DIR, f"{dataset}_credible_set.hdf5")):
		raise IOError("This credible set already exists")
	with h5py.File(os.path.join(RAW_DIR, f"{dataset}_predictions.hdf5"), 'r') as predictions:
	  with h5py.File(os.path.join(INTERIM_DIR, f"{dataset}_credible_set.hdf5", 'a') as credible_file:
	    for method in list(predictions.keys()):
	      for split in list(predictions[method].keys()):
	        label_path = os.path.join(method, split, 'labels')
	        credible_file.create_dataset(label_path, data=predictions[method][split]['labels'])
	        for eps in [.05]: 
	          print(method, split, eps)
	          
	          credible_set_path = os.path.join(method, split, str((1-eps)*100)+'_credible_set')
	          credible_sets = np.apply_along_axis(get_credible_set, 1 if dataset=='imagenet' else 2, predictions[method][split]['probs'], epsilon=eps)
	          credible_file.create_dataset(credible_set_path, data=credible_sets)


def main(): 
	parser = argparse.ArgumentParser("Create a credible set from Ovadia et al predictions")
	parser.add_argument("--dataset", type=str, choices=['mnist', 'cifar', 'imagenet'])
	args = parser.parse_args()

	create_credible_set_h5py(args.dataset)
